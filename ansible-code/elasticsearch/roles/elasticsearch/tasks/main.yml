---
# tasks file for roles/elasticsearch
- name: installing Java
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - java-{{ java_version }}-openjdk
    - java-{{  java_version }}-openjdk-devel

- name: Creating java paramter
  copy:
    dest: /etc/profile.d/java.sh
    content: |
      export JAVA_HOME=/usr/lib/jvm/jre-openjdk
      export PATH=$PATH:$JAVA_HOME/bin
      export CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar

- name: Importing RPM GPG key
  rpm_key:
    state: present
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch

- name: Creating elasticsearch repo
  copy:
    dest: /etc/yum.repos.d/elasticsearch.repo
    content: |
      [elasticsearch-{{ elasticsearch.repo_version }}]
      name=Elasticsearch repository for {{ elasticsearch.repo_version }} packages
      baseurl=https://artifacts.elastic.co/packages/{{ elasticsearch.repo_version }}/yum
      gpgcheck=1
      gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
      enabled=1
      autorefresh=1
      type=rpm-md

- name: installing elasticsearch
  yum:
    name: elasticsearch
    state: present

- name: Updating java memory
  lineinfile:
    path: "/etc/elasticsearch/jvm.options"
    line: "{{ item.line }}"
    regexp: '^{{ item.regexp }}'
  with_items:
    - { regexp: '-Xms1g', line: '{{ elasticsearch.java_max_mem }}' }
    - { regexp: '-Xmx1g', line: '{{ elasticsearch.java_min_mem }}' }

- name: add lines
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: '{{ item }}'
  with_items:
    - 'node.name: "{{ elasticsearch.node_name}}"'
    - 'cluster.name: {{ elasticsearch.cluster_name}}'
    - 'network.host: 0.0.0.0'
    - 'discovery.type: single-node'
    - 'xpack.security.enabled: true'

- name: Start and Enabled elasticsearch Service
  service:
    name: elasticsearch
    state: started
    enabled: yes

- name: Validating port number
  wait_for:
    host: localhost
    port: 9200
    timeout: 60

# - name: Validating elasticsearch vai URL
#   uri:
#     url: "http://127.0.0.1:9200"
#     method: GET
#     status_code: 200
#   register: result
#   until: result.status == 200
#   retries: 3
#   delay: 2
- name: Checking default password file is present
  stat: 
    path: /etc/elasticsearch/default_passwords
  register: file_result

- name: Creating a default password for elasticsearch
  shell: "echo y|/usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto > /etc/elasticsearch/default_passwords"
  when: file_result.stat.isdir is not defined

- name: Verifying a user
  shell: "/usr/share/elasticsearch/bin/elasticsearch-users list {{ elasticsearch.admin_user }}"
  ignore_errors: yes
  register: user_result

- name: Creating a user
  shell: "/usr/share/elasticsearch/bin/elasticsearch-users useradd {{ elasticsearch.admin_user }} -p {{ elasticsearch.admin_password }} -r superuser"
  when: '"ERROR" in user_result.stdout'

- name: Validating elasticsearch vai URL
  uri:
    url: "http://127.0.0.1:9200"
    method: GET
    status_code: '200'
    user: '{{ elasticsearch.admin_user }}'
    password: '{{ elasticsearch.admin_password }}'
  register: result
  until: result.status == 200
  retries: 3
  delay: 2

