---
- name: Host Prerequisites
  hosts: tag_Role_zookeeper:tag_Role_kafka_broker:tag_Role_schema_registry:tag_Role_kafka_connect:tag_Role_ksql:tag_Role_control_center:tag_Role_kafka_rest
  remote_user: ec2-user
  become: true
  become_method: sudo
  tasks:
  - import_role:
      name: confluent.variables_handlers
  - import_role:
      name: confluent.common
  - import_role:
      name: confluent.kerberos
    when: "'GSSAPI' in kafka_broker_sasl_enabled_mechanisms and kerberos_configure|bool"
  - name: Create Certificate Authority and Copy to Ansible Host
    include_tasks: tasks/certificate_authority.yml
    run_once: true
    when: self_signed|bool and regenerate_ca|bool

- name: Zookeeper Provisioning
  hosts: tag_Role_zookeeper
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - zookeeper
  tasks:
  - import_role:
      name: confluent.zookeeper

- name: Kafka Broker Provisioning
  remote_user: ec2-user
  become: true
  become_method: sudo
  hosts: tag_Role_kafka_broker
  gather_facts: no
  tags:
    - kafka_broker
  tasks:
  - import_role:
      name: confluent.kafka_broker

- name: Schema Registry Provisioning
  hosts: tag_Role_schema_registry
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - schema_registry
  tasks:
  - import_role:
      name: confluent.schema_registry

- name: Kafta Connect Provisioning
  hosts: tag_Role_kafka_connect
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - kafka_connect
  tasks:
  - import_role:
      name: confluent.kafka_connect

- name: KSQL Provisioning
  hosts: tag_Role_ksql
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - ksql
  tasks:
  - import_role:
      name: confluent.ksql

- name: Kafka Rest Provisioning
  hosts: tag_Role_kafka_rest
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - kafka_rest
  tasks:
  - import_role:
      name: confluent.kafka_rest

- name: Control Center Provisioning
  hosts: tag_Role_control_center
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: no
  tags:
    - control_center
  tasks:
  - import_role:
      name: confluent.control_center
